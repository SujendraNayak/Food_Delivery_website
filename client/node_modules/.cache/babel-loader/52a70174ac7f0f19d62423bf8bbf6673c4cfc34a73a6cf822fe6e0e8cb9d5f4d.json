{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  open: false,\n  message: \"\",\n  severity: \"success\"\n};\nconst snackbar = createSlice({\n  name: \"snackbar\",\n  initialState,\n  reducers: {\n    openSnackbar: (state, action) => {\n      state.open = true;\n      state.message = action.payload.message;\n      state.severity = action.payload.severity;\n    },\n    closeSnackbar: state => {\n      state.open = false;\n    }\n  }\n});\nexport const {\n  openSnackbar,\n  closeSnackbar\n} = snackbar.actions;\nexport default snackbar.reducer;","map":{"version":3,"names":["createSlice","initialState","open","message","severity","snackbar","name","reducers","openSnackbar","state","action","payload","closeSnackbar","actions","reducer"],"sources":["C:/Users/SUJENDRA NAYAK/OneDrive/Desktop/Food_Delivery_website/client/src/redux/reducers/SnackbarSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  open: false,\n  message: \"\",\n  severity: \"success\",\n};\n\nconst snackbar = createSlice({\n  name: \"snackbar\",\n  initialState,\n  reducers: {\n    openSnackbar: (state, action) => {\n      state.open = true;\n      state.message = action.payload.message;\n      state.severity = action.payload.severity;\n    },\n    closeSnackbar: (state) => {\n      state.open = false;\n    },\n  },\n});\n\nexport const { openSnackbar, closeSnackbar } = snackbar.actions;\n\nexport default snackbar.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,KAAK;EACXC,OAAO,EAAE,EAAE;EACXC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,QAAQ,GAAGL,WAAW,CAAC;EAC3BM,IAAI,EAAE,UAAU;EAChBL,YAAY;EACZM,QAAQ,EAAE;IACRC,YAAY,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACP,IAAI,GAAG,IAAI;MACjBO,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACC,OAAO,CAACR,OAAO;MACtCM,KAAK,CAACL,QAAQ,GAAGM,MAAM,CAACC,OAAO,CAACP,QAAQ;IAC1C,CAAC;IACDQ,aAAa,EAAGH,KAAK,IAAK;MACxBA,KAAK,CAACP,IAAI,GAAG,KAAK;IACpB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEM,YAAY;EAAEI;AAAc,CAAC,GAAGP,QAAQ,CAACQ,OAAO;AAE/D,eAAeR,QAAQ,CAACS,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}